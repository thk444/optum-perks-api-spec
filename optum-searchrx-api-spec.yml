openapi: 3.0.0
info:
  version: '0.36.0'
  title: SearchRx REST API
  description: >
    REST API specification for SearchRx
security:
  - application:
      - read
      - write
paths:
  /account:
    post:
      tags: [MVP]
      description: |
        Creates a new anonymous user account.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /content/{id-or-urlSlug}:
    get:
      tags: [MVP]
      description: |
        Returns dynamic app content.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/contentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppContent'
        '404':
          $ref: '#/components/responses/Error404'
  /coupons:
    get:
      tags: [MVP]
      description: |
        Returns all of the coupons for the specified account ID.

        When available, clients should specify their current location via the `location` query parameter.

        When there are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponsWrapper'
    post:
      tags: [MVP]
      description: |
        Creates a new coupon for the specified formulation.

        Note: This endpoint creates a new coupon for the current user, but the coupon will not appear in the current user's coupon list returned by `GET /coupons` until they save it via a separate request to `POST /coupons/{id}/save`.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CouponPost'
            examples:
              retailer:
                summary: With a Specific Retailer
                value:
                  formulationId: 30d048c3-4a4a-4c96-902b-9b29317893af
                  quantity: 30
                  locationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              composite:
                summary: Without a Specific Retailer
                value:
                  formulationId: 30d048c3-4a4a-4c96-902b-9b29317893af
                  quantity: 30
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
              examples:
                compositePrice:
                  $ref: '#/components/examples/CouponWithCompositePrice'
                retailerPrice:
                  $ref: '#/components/examples/CouponWithRetailerPrice'
        '422':
          $ref: '#/components/responses/Error422'
  /coupons/{id}:
    get:
      tags: [MVP]
      description: |
        Returns details for the coupon with the specified ID for the specified account ID.

        When available, clients should specify their current location via the `location` query parameter.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
        - $ref: '#/components/parameters/location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
              examples:
                compositePrice:
                  $ref: '#/components/examples/CouponWithCompositePrice'
                retailerPrice:
                  $ref: '#/components/examples/CouponWithRetailerPrice'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      tags: [MVP]
      description: |
        Deletes the coupon with the specified ID for the specified account ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/Error404'
  /coupons/{id}/save:
    post:
      tags: [MVP]
      description: |
        Saves the coupon with the specified ID to the current user's coupon list.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
              examples:
                compositePrice:
                  $ref: '#/components/examples/CouponWithCompositePrice'
                retailerPrice:
                  $ref: '#/components/examples/CouponWithRetailerPrice'
        '404':
          $ref: '#/components/responses/Error404'
        '422':
          $ref: '#/components/responses/Error422'
  /coupons/{id}/copy:
    post:
      tags: [MVP]
      description: |
        Copies an existing coupon for the specified coupon ID and account ID for sharing via a mobile OS share sheet.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CouponCopyPost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponCopy'
        '404':
          $ref: '#/components/responses/Error404'
        '422':
          $ref: '#/components/responses/Error422'
  /coupons/{id}/send:
    post:
      tags: [MVP]
      description: |
        Sends a copy of the coupon for the specified coupon ID and account ID to the specified recipient.

        Note: This endpoint is not intended to be used by mobile clients. Use `POST /coupons/{id}/copy` to copy a coupon for sharing via a mobile OS share sheet.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CouponSendPost'
            examples:
              email:
                summary: Email
                value:
                  sendType: email
                  email: test@example.com
              textMessage:
                summary: Text Message
                value:
                  sendType: textMessage
                  phoneNumber: 6121111111
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
              examples:
                compositePrice:
                  $ref: '#/components/examples/CouponWithCompositePrice'
                retailerPrice:
                  $ref: '#/components/examples/CouponWithRetailerPrice'
        '404':
          $ref: '#/components/responses/Error404'
        '422':
          $ref: '#/components/responses/Error422'
  /devices:
    post:
      tags: [Post-MVP]
      description: |
        Creates a new device for the current user with the specified properties.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DevicePost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '422':
          $ref: '#/components/responses/Error422'
  /discount-cards/{id-or-urlSlug}:
    get:
      tags: [MVP]
      description: |
        Returns details for the discount card with the specified ID or URL slug.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/discountCardId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountCard'
        '404':
          $ref: '#/components/responses/Error404'
  /drugs:
    get:
      tags: [MVP]
      description: |
        Returns a list of drugs that match the query parameters.

        When there are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/drugsFilter'
        - $ref: '#/components/parameters/drugsSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugsWrapper'
  /drugs/{id-or-urlSlug}:
    get:
      tags: [MVP]
      description: |
        Returns the drug with the specified ID or URL slug.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drug'
        '404':
          $ref: '#/components/responses/Error404'
  /drugs/{id-or-urlSlug}/images:
    get:
      tags: [MVP]
      description: |
        Returns images for the drug with the specified ID or URL slug.

        When there are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesWrapper'
        '404':
          $ref: '#/components/responses/Error404'
  /drug-classes:
    get:
      tags: [MVP]
      description: |
        Returns all the drug classes.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugClassesWrapper'
  /drug-classes/{id-or-urlSlug}:
    get:
      tags: [MVP]
      description: |
        Returns the drug class with the specified ID or URL slug.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugClassId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugClass'
        '404':
          $ref: '#/components/responses/Error404'
  /drug-classes/{id-or-urlSlug}/drugs:
    get:
      tags: [MVP]
      description: |
        Returns drugs associated with the specified drug class.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugClassId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/drugsSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugsWrapper'
        '404':
          $ref: '#/components/responses/Error404'
  /health-conditions:
    get:
      tags: [MVP]
      description: |
        Returns all the health conditions.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/healthConditionsFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthConditionsWrapper'
  /health-conditions/{id-or-urlSlug}:
    get:
      tags: [MVP]
      description: |
        Returns the health condition with the specified ID or `urlSlug`.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/healthConditionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCondition'
        '404':
          $ref: '#/components/responses/Error404'
  /health-conditions/{id-or-urlSlug}/drugs:
    get:
      tags: [MVP]
      description: |
        Returns drugs associated with the specified health condition.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/healthConditionId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/drugsSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugsWrapper'
        '404':
          $ref: '#/components/responses/Error404'
  /help:
    get:
      tags: [MVP]
      description: |
        Returns all of the help categories.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpWrapper'
  /help/{id-or-urlSlug}:
    get:
      tags: [MVP]
      description: |
        Returns the help category with the specified ID or `urlSlug`.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/helpId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Help'
        '404':
          $ref: '#/components/responses/Error404'
  /kill-switch:
    get:
      tags: [MVP]
      description: |
        Checks to see if a given client is still supported.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - name: platform
          in: query
          schema:
            type: string
            enum:
              - iOS
              - Android
          required: true
        - name: model
          in: query
          schema:
            type: string
          example: iPhone X
          required: true
        - name: osVersion
          in: query
          schema:
            type: string
          example: iOS 12.2
          required: true
        - name: appVersion
          in: query
          schema:
            type: string
          example: '1.4'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KillSwitch'
  /newsletter-sign-up:
    post:
      tags: [MVP]
      description: |
        Registers the specified email address to receive the newsletter. The server will validate the email address and return a validation error if the email address is invalid.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/NewsletterSignUpPost'
      responses:
        '204':
          description: No Content
        '422':
          description: |
            Returned when request fails due to an invalid email address.
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - fieldName
                        - message
                      properties:
                        fieldName:
                          type: string
                          example: 'email'
                        message:
                          type: string
                          example: The email field was invalid.
  /places:
    get:
      tags: [MVP]
      description: |
        Returns cities, states, or ZIP Codes that match the query.

        This endpoint is intended to be used to display results in real time as the user types.

        When there are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/placesQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacesWrapper'
  /preferences:
    get:
      tags: [Post-MVP]
      description: |
        Returns the current user's preferences.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
    patch:
      tags: [Post-MVP]
      description: |
        Updates the current user's preferences.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PreferencesPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
        '422':
          $ref: '#/components/responses/Error422'
  /prices:
    get:
      tags: [MVP]
      description: |
        Returns prices based on the specified formulation and quantity.

        * When `searchLocation` is specified: the 20 results nearest to `searchLocation` will be returned.
        * When `locationIds` is specified: prices for the specified `locationIds` will be returned.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/formulationId'
        - $ref: '#/components/parameters/quantity'
        - $ref: '#/components/parameters/searchLocation'
        - $ref: '#/components/parameters/locationIds'
        - $ref: '#/components/parameters/location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesWrapper'
  /prices/composite:
    get:
      tags: [MVP]
      description: |
        Returns price details unaffiliated with a specific retailer based on the specified formulation and quantity.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/formulationId'
        - $ref: '#/components/parameters/quantity'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesComposite'
  /retailers:
    get:
      tags: [MVP]
      description: |
        Returns retailers sorted alphabetically.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailersWrapper'
  /retailers/{id}/locations:
    get:
      tags: [MVP]
      description: |
        Returns retailer locations that match the specified search criteria.

        Results are in order by distance from the search location.

        When `searchLocation[type]` is `map`:
          - `searchLocation[radius]` is required.
          - `page` and `limit` are ignored.
          - Results will be displayed on an interactive map.

        When `searchLocation[type]` is `currentLocation`:
          - `searchLocation[radius]` is ignored.

        When there are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/retailerId'
        - $ref: '#/components/parameters/searchLocationType'
        - $ref: '#/components/parameters/searchLocationLocation'
        - $ref: '#/components/parameters/searchLocationRadius'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailerLocationsWrapper'
        '404':
          $ref: '#/components/responses/Error404'
  /search:
    get:
      tags: [MVP]
      description: |
        Returns a list of search results that match the query parameters.

        Search results can be drugs, drug classes, or health conditions.

        This endpoint is intended to be used to display results in real time as the user types.

        When there are no results, an empty array will be returned.

        Additional context for drug search results:
        * Search results will include drugs where the generic name or brand name is a partial or exact match for the `q` param value. It doesn’t matter if drugs are brand name or generic: all matches will be returned.
        * For search results, `title` is always `drug.name`. `drug.name` can be either a generic name or brand name.
        * For generic search results, if there is a known brand name for the drug, `subtitle` should be the phrase `Generic [brand name]`, e.g. “Generic Lipitor”.
        * For brand name search results, if there’s a known generic name, `subtitle` should be the generic name. e.g. “Atorvastatin”.
        * The ID of the search result will match the generic drug when available. So if both "Atorvastatin" and "Lipitor" appear in the results, `id` will match Atorvastatin's ID. Clients will use `id` to request additional drug details.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/searchQuery'
        - $ref: '#/components/parameters/searchType'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchWrapper'
  /send-app-link:
    post:
      tags: [MVP]
      description: |
        Sends an SMS message to the specified number with a link to download the app.
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SendAppLinkPost'
      responses:
        '204':
          description: No Content
        '422':
          description: |
            Returned when request fails due to an invalid email address.
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - fieldName
                        - message
                      properties:
                        fieldName:
                          type: string
                          example: 'phoneNumber'
                        message:
                          type: string
                          example: The phone number was invalid.
components:
  parameters:
    acceptLanguage:
      in: header
      name: Accept-Language
      schema:
        type: string
        example: en-US
      description: Specifies which language the client is able to understand. When specified, the server should localize dynamic data, like prices and content, based on the specified language code. Static labels on the client, like headings and button labels, will be localized on the client.
    accountId:
      in: header
      name: X-Account-ID
      schema:
        type: string
        format: uuid
      description: The current user's ID, if any.
    contentId:
      in: path
      name: id-or-urlSlug
      required: true
      schema:
        type: string
        format: uuid
      description: The ID or `urlSlug` for a given content entry.
    couponId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given coupon.
    discountCardId:
      in: path
      name: id-or-urlSlug
      required: true
      schema:
        type: string
        format: uuid
      description: The ID or `urlSlug` for a given discount card.
    drugClassId:
      in: path
      name: id-or-urlSlug
      required: true
      schema:
        type: string
        format: uuid
      description: The ID or `urlSlug` for a drug class.
    drugId:
      in: path
      name: id-or-urlSlug
      required: true
      schema:
        type: string
        format: uuid
      description: The ID or `urlSlug` for a given drug.
    drugsFilter:
      in: query
      name: filter
      schema:
        type: string
        enum:
          - common
          - popular
      required: false
      description: |
        Filters the results based on the specified value.
          - `common`: Includes the most common drugs. These are configured by hand on the backend specifically for SEO.
          - `popular`: Includes the most popular drugs.
      example: common
    drugsSort:
      in: query
      name: sort
      schema:
        type: string
        enum:
          - name
          - -name
          - popularity
          - -popularity
      required: false
      description: |
        Sorts the results based on the specified value.
          - `name`: Sorts results alphabetically.
          - `-name`: Sorts results reverse-alphabetically.
          - `popularity`: Sorts results by popularity. Most popular first.
          - `-popularity`: Sorts results by popularity. Least popular first.
      example: name
    formulationId:
      in: query
      name: formulationId
      schema:
        type: string
        format: uuid
      required: true
    healthConditionId:
      in: path
      name: id-or-urlSlug
      required: true
      schema:
        type: string
        format: uuid
      description: The ID or `urlSlug` for a health condition.
    healthConditionsFilter:
      in: query
      name: filter
      schema:
        type: string
        enum:
          - common
      required: false
      description: |
        Filters the results based on the specified value.
          - `common`: Includes the most common health conditions. These are configured by hand on the backend specifically for SEO.
      example: common
    helpId:
      in: path
      name: id-or-urlSlug
      required: true
      schema:
        type: string
        format: uuid
      description: The ID or `urlSlug` for a given help entry.
    limit:
      in: query
      name: limit
      schema:
        type: integer
      description: Indicates how many results to return per page.
      example: 50
    location:
      in: query
      name: location
      schema:
        type: string
      description: The user's current location. Format is `[latitude],[longitude]`.
      example: 44.949782,-93.285233
    locationIds:
      in: query
      name: locationIds
      schema:
        type: string
      description: A comma-separated list of retailer location IDs. Either `searchLocation` or `locationIds` must be specified.
      example: c824ef47-4200-467b-8f20-87de4332f45a,cc2cc436-7d3c-4aaf-859b-d71a92716eb1,3b9de4cb-129c-4625-b07f-1b5150d515e6
    page:
      in: query
      name: page
      schema:
        type: integer
      description: Indicates which page of results to load.
      example: 3
    placesQuery:
      in: query
      name: q
      schema:
        type: string
      required: true
      description: Query to match all or part of a city, state, or ZIP Code.
      example: minneap
    quantity:
      in: query
      name: quantity
      schema:
        type: number
        format: double
        example: 30
      required: true
      description: Indicates how many units are included in the price.
    retailerId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given retailer.
    searchLocation:
      in: query
      name: searchLocation
      schema:
        type: string
      description: The center of the search area. Format is `[latitude],[longitude]`. Either `searchLocation` or `locationIds` must be specified.
      example: 44.949782,-93.285233
    searchLocationLocation:
      in: query
      name: searchLocation[location]
      required: true
      schema:
        type: string
      description: The center of the search area. Format is `[latitude],[longitude]`.
      example: 44.949782,-93.285233
    searchLocationRadius:
      in: query
      name: searchLocation[radius]
      schema:
        type: string
      description: The radius in meters of a circle centered around `searchLocation[location]`. Matching results within the circle will be returned. This parameter is required when `searchLocation[type]` is `map`.
      example: 1000.0
    searchLocationType:
      in: query
      name: searchLocation[type]
      schema:
        type: string
        enum:
          - currentLocation
          - map
      required: true
      description: |
        - `currentLocation`: Search around the user's current location.
        - `map`: Search an area of a map. Requires a center point and radius `searchLocation[radius]`.
      example: map
    searchQuery:
      in: query
      name: q
      schema:
        type: string
      required: true
      description: Query that describes what to search for. For drugs, this value can match any part of a drug's generic or brand names.
      example: Atorvastatin
    searchType:
      in: query
      name: type
      schema:
        type: string
        enum:
          - drug
          - drugClass
          - healthCondition
        default: drug
      required: false
      description: Restricts results to include values of the specified type. If no value is specified, `drug` is used.
  schemas:
    AppContent:
      type: object
      required:
        - html
        - id
        - plainText
        - title
        - urlSlug
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: Help
        html:
          type: string
          example: >
            <ul><li><a href='https://example.com/contact-us'>Contact Us</a></li></ul>
        plainText:
          type: string
          example: Contact Us
        urlSlug:
          type: string
          example: footer-content
    Content:
      type: object
      required:
        - html
        - id
        - legalDisclaimer
        - title
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: Proper Use
        html:
          type: string
          example: >
            <p>This is the content for the Proper Use section.</p>
        legalDisclaimer:
          type: string
          example: A disclaimer is generally any statement intended to specify or delimit the scope of rights and obligations that may be exercised and enforced by parties in a legally recognized relationship. In contrast to other terms for legally operative language, the term disclaimer usually implies situations that involve some level of uncertainty, waiver, or risk.
    Coordinates:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: double
          example: 44.949782
        longitude:
          type: number
          format: double
          example: -93.285233
    Coupon:
      type: object
      required:
        - bin
        - drugStatus
        - formulation
        - grp
        - id
        - pcn
        - price
        - quantity
        - uid
        - url
        - variants
      properties:
        id:
          type: string
          format: uuid
        bin:
          type: string
          example: '009999'
        grp:
          type: string
          example: ABC123
        pcn:
          type: string
          example: ABCDEF
        uid:
          type: string
          example: ABC1234567
        url:
          type: string
          example: https://bit.ly/2MUVNgT
        drugStatus:
          $ref: '#/components/schemas/DrugStatus'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
        formulation:
          $ref: '#/components/schemas/Formulation'
        quantity:
          $ref: '#/components/schemas/Quantity'
        price:
          $ref: '#/components/schemas/CouponPrice'
    CouponCopy:
      type: object
      required:
        - coupon
        - emailBody
        - subjectLine
        - textBody
      properties:
        textBody:
          type: string
          example: >
            Here's your coupon for Atorvastatin. Show this to your pharmacist:

            MemberID: ABC1234567
            RxGroup: ABC123
            RxBin: 009999
            RxPCN: ABCDEF
            https://searchrx.com/123
        emailBody:
          type: string
          example: >
            <html>
              <head>
                <title>Here is your Atovastatin coupon</title>
              </head>
              <body>
                <table>
                  <tr>
                    <td>
                      Show this to your pharmacist at your local Walmart pharmacy.
                    </td>
                  </tr>
                </table>
              </body>
            </html>
        subjectLine:
          type: string
          example: Here is your Atorvastatin Coupon
        coupon:
          $ref: '#/components/schemas/Coupon'
    CouponCopyPost:
      type: object
      required:
        - destination
      properties:
        destination:
          type: string
          enum:
            - textMessage
            - email
            - copyLink
            - other
          description: This value indicates how the user intends to share the coupon. The server will respond with the full response payload regardless of which `destination` is specified.
    CouponPost:
      type: object
      required:
        - formulationId
        - quantity
      properties:
        formulationId:
          type: string
          format: uuid
        quantity:
          type: number
          format: double
          example: 30
        locationId:
          type: string
          format: uuid
          description: If this value is not present in the request body, then a coupon unaffiliated with a specific retailer will be created.
    CouponPrice:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - compositePrice
            - retailerPrice
          description: |
            * When `type` is `compositePrice`, `compositePrice` will be included.
            * When `type` is `retailerPrice`, `retailerPrice` will be included.
        compositePrice:
          $ref: '#/components/schemas/CouponPriceComposite'
        retailerPrice:
          $ref: '#/components/schemas/CouponPriceRetailer'
    CouponPriceComposite:
      type: object
      required:
        - lowPrice
        - highPrice
      description: The range of prices for this coupon.
      properties:
        lowPrice:
          $ref: '#/components/schemas/PriceAmount'
        highPrice:
          $ref: '#/components/schemas/PriceAmount'
    CouponPriceRetailer:
      type: object
      required:
        - price
        - priceLevel
        - retailer
      properties:
        price:
          $ref: '#/components/schemas/PriceAmount'
        priceLevel:
          $ref: '#/components/schemas/PriceLevel'
        retailer:
          $ref: '#/components/schemas/Retailer'
    CouponSendPost:
      type: object
      required:
        - sendType
      properties:
        sendType:
          type: string
          enum:
            - email
            - textMessage
        email:
          type: string
          format: email
          description: Required when `sendType` is `email`.
        phoneNumber:
          type: string
          description: Required when `sendType` is `textMessage`.
    CouponsWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
        metadata:
          $ref: '#/components/schemas/PageMetadataNull'
    Device:
      type: object
      required:
        - appVersion
        - deviceIdentifier
        - id
        - model
        - osVersion
        - platform
      properties:
        id:
          type: string
          format: uuid
        deviceToken:
          type: string
          format: uuid
          description: Push notification token provided by iOS or Android. This value is not always immediately available, so it's optional. The device may make a second post that includes this value.
        deviceIdentifier:
          type: string
          format: uuid
          description: Persistent, unique identifier for this device generated by the client.
        platform:
          type: string
          enum:
            - iOS
            - Android
        model:
          type: string
          example: iPhone X
        osVersion:
          type: string
          example: iOS 12.2
        appVersion:
          type: string
          example: '1.4'
    DevicePost:
      type: object
      required:
        - appVersion
        - deviceIdentifier
        - model
        - osVersion
        - platform
      properties:
        deviceToken:
          type: string
          format: uuid
          description: Push notification token provided by iOS or Android. This value is not always immediately available, so it's optional. The device may make a second post that includes this value. If a record already exists for this device, then the value should be updated.
        deviceIdentifier:
          type: string
          format: uuid
          description: Persistent, unique identifier for this device generated by the client.
        platform:
          type: string
          enum:
            - iOS
            - Android
        model:
          type: string
          example: iPhone X
        osVersion:
          type: string
          example: iOS 12.2
        appVersion:
          type: string
          example: '1.4'
    DiscountCard:
      type: object
      required:
        - discountCardImage
        - id
        - pageTitle
        - partnerLogo
        - partnerName
        - urlSlug
      properties:
        id:
          type: string
          format: uuid
        pageTitle:
          type: string
          example: Get your free Genoa Discount Card!
        partnerName:
          type: string
          example: Genoa
        partnerLogo:
          $ref: '#/components/schemas/ImageWithDarkModeSupport'
        discountCardImage:
          $ref: '#/components/schemas/ImageWithDarkModeSupport'
        urlSlug:
          type: string
          example: genoa
          nullable: true
    Drug:
      type: object
      required:
        - defaultSettings
        - drugStatus
        - formulations
        - id
        - info
        - isGeneric
        - medicare
        - name
        - pharmacologicClassifications
        - sideEffects
        - therapeuticClassifications
        - urlSlug
        - variants
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Atorvastatin
        isGeneric:
          type: boolean
          description: Indicates whether or not this drug is generic.
        drugStatus:
          $ref: '#/components/schemas/DrugStatus'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
        formulations:
          type: array
          items:
            $ref: '#/components/schemas/Formulation'
          minItems: 1
          example:
            -
              id: 30d048c3-4a4a-4c96-902b-9b29317893af
              drugId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              gpi14: '39400010100330'
              name: Atorvastatin
              isGeneric: true
              form: Tablet
              pluralForm: Tablets
              dosage:
                value: 10
                unit: mg
                display: 10 mg
              commonQuantities:
                -
                  value: 30
                  display: 30 tablets
                  ndc: '50090-1254-0'
                -
                  value: 60
                  display: 60 tablets
                  ndc: '50090-1254-1'
                -
                  value: 90
                  display: 90 tablets
                  ndc: '50090-1254-2'
            -
              id: ee26ed45-dd92-44c0-8e11-fe513420e17b
              drugId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              gpi14: '39400010100360'
              name: Atorvastatin
              isGeneric: true
              form: Tablet
              pluralForm: Tablets
              dosage:
                value: 20
                unit: mg
                display: 20 mg
              commonQuantities:
                -
                  value: 30
                  display: 30 tablets
                  ndc: '50090-1255-0'
                -
                  value: 60
                  display: 60 tablets
                  ndc: '50090-1255-1'
                -
                  value: 90
                  display: 90 tablets
                  ndc: '50090-1255-2'
            -
              id: 8275d9d5-cc08-4d1c-b37d-2855da4b6a4f
              drugId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              gpi14: '58200060100105'
              name: Lipitor
              isGeneric: false
              form: Tablet
              pluralForm: Tablets
              dosage:
                value: 10
                unit: mg
                display: 10 mg
              commonQuantities:
                -
                  value: 60
                  display: 60 tablets
                  ndc: '50090-9932-0'
        defaultSettings:
          type: object
          required:
            - formulationId
            - quantity
          properties:
            formulationId:
              type: string
              format: uuid
              example: 30d048c3-4a4a-4c96-902b-9b29317893af
            quantity:
              type: number
              format: double
              example: 30
          nullable: true
          description: Indicates which formulation and quantity should be selected by default when displayed in the prescription settings view. This object may be null.
        info:
          type: array
          items:
            $ref: '#/components/schemas/Content'
        therapeuticClassifications:
          type: array
          items:
            type: string
          example: [Antihyperlipidemic]
          description: A list of this drug's therapeutic classifications. If there are none, an empty array will be returned.
        pharmacologicClassifications:
          type: array
          items:
            type: string
          example: [HMG-COA Reductase Inhibitor]
          description: A list of this drug's pharmacologic classifications. If there are none, an empty array will be returned.
        urlSlug:
          type: string
          example: atorvastatin
        medicare:
          type: object
          required:
            - isCovered
            - explanation
          properties:
            isCovered:
              type: boolean
            explanation:
              type: string
              example: 100% of Medicare Part D and Medicare Advantage plans cover this drug.
              nullable: true
        sideEffects:
          type: object
          required:
            - overview
            - commonSideEffectsOverview
            - commonSideEffects
            - rareSideEffectsOverview
            - rareSideEffects
          properties:
            overview:
              type: string
              example: This is not a complete list of side effects and others may occur. Call your doctor for medical advice about side effects.
              nullable: true
            commonSideEffectsOverview:
              type: string
              example: Aliquam in scelerisque neque, vitae dignissim eros. In non luctus augue, sed pellentesque risus. Etiam pellentesque rutrum elit, eu lobortis turpis efficitur ullamcorper.
              nullable: true
            commonSideEffects:
              type: array
              items:
                type: string
                example: dizziness
            rareSideEffectsOverview:
              type: string
              example: Aliquam in scelerisque neque, vitae dignissim eros. In non luctus augue, sed pellentesque risus. Etiam pellentesque rutrum elit, eu lobortis turpis efficitur ullamcorper.
              nullable: true
            rareSideEffects:
              type: array
              items:
                type: string
                example: dizziness
    DrugClass:
      type: object
      required:
        - description
        - healthConditions
        - html
        - id
        - name
        - urlSlug
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: ACE Inhibitors
        description:
          type: string
          example: An angiotensin-converting-enzyme inhibitor (ACE inhibitor) is a pharmaceutical drug used primarily for the treatment of hypertension (elevated blood pressure) and congestive heart failure.
          nullable: true
        html:
          type: string
          example: >
            <p>This group of drugs causes relaxation of blood vessels as well as a decrease in blood volume, which leads to lower blood pressure and decreased oxygen demand from the heart. They inhibit the angiotensin-converting enzyme, an important component of the renin–angiotensin system.

            Frequently prescribed ACE inhibitors include benazepril, zofenopril, perindopril, trandolapril, captopril, enalapril, lisinopril, and ramipril.</p>
          nullable: true
        urlSlug:
          type: string
          example: ace-inhibitors
        healthConditions:
          type: array
          items:
            $ref: '#/components/schemas/DrugClassHealthCondition'
          description: Indicates which health conditions this class of drug is popularly prescribed for.
    DrugClassHealthCondition:
      type: object
      required:
        - healthCondition
        - popularity
      properties:
        healthCondition:
          $ref: '#/components/schemas/HealthCondition'
        popularity:
          type: string
          example: '35%'
          description: This value is displayed to the user to indicate popularity.
          nullable: true
    DrugClassesWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DrugClass'
        metadata:
          $ref: '#/components/schemas/PageMetadataNull'
    DrugStatus:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - active
            - notYetAvailable
            - recalled
          description: When `type` is `active`, `details` will not be included.
        details:
          type: object
          required:
            - description
            - title
            - moreInfoUrl
          properties:
            title:
              type: string
              example: Dexlansoprazole is not available yet.
            description:
              type: string
              example: Dexlansoprazole has been approved by the FDA but isn't available in pharmacies yet.
            moreInfoUrl:
              type: string
              example: https://example.com/more-details
              nullable: true
          description: This attribute will not be included when type is `active`.
      example:
        type: active
        details: null
    DrugsWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Drug'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    Error404:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: The resource {resource name} could not be found.
    Error422:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - fieldName
              - message
            properties:
              fieldName:
                type: string
                example: '{fieldName}'
                nullable: true
              message:
                type: string
                example: The {fieldName} field cannot be blank.
                nullable: true
    FavoriteLocationPreference:
      type: object
      required:
        - id
        - retailer
      properties:
        id:
          type: string
          format: uuid
        retailer:
          $ref: '#/components/schemas/Retailer'
    Formulation:
      type: object
      required:
        - commonQuantities
        - dosage
        - drugId
        - form
        - gpi14
        - id
        - isGeneric
        - name
        - pluralForm
      properties:
        id:
          type: string
          format: uuid
        drugId:
          type: string
          format: uuid
        gpi14:
          $ref: '#/components/schemas/GPI14'
        name:
          type: string
          example: Atorvastatin
          description: The name of the drug. This could be the generic name or a brand name.
        isGeneric:
          type: boolean
          description: Indicates whether or not this drug is generic.
        form:
          type: string
          example: Tablet
        pluralForm:
          type: string
          example: Tablets
          nullable: true
        dosage:
          type: object
          required:
            - value
            - unit
            - display
          properties:
            value:
              type: number
              format: double
              example: 40
            unit:
              type: string
              example: mg
            display:
              type: string
              example: 40 mg
        commonQuantities:
          type: array
          items:
            $ref: '#/components/schemas/Quantity'
    GPI14:
      type: string
      example: '39400010100330'
      description: |
        Medispan Generic Product Identifier
        https://www.wolterskluwercdi.com/drug-data/gpi/
    HealthCondition:
      type: object
      required:
        - commonName
        - description
        - heroIcon
        - heroImage
        - html
        - id
        - isCommon
        - name
        - urlSlug
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The clinical name for this condition.
          example: Allergic Rhinitis
        commonName:
          type: string
          description: Commonly known as.
          example: Allergies
          nullable: true
        description:
          type: string
          example: This is a brief description of the health condition.
          nullable: true
        html:
          type: string
          example: >
            <p>A damaging immune response by the body to a substance, especially pollen, fur, a particular food, or dust, to which it has become hypersensitive.</p>
          nullable: true
        heroImage:
          $ref: '#/components/schemas/ImageWithDarkModeSupport'
        heroIcon:
          $ref: '#/components/schemas/ImageWithDarkModeSupport'
        isCommon:
          type: boolean
          description: Indicates whether or not this is a common health condition.
        urlSlug:
          type: string
          example: allergies
    HealthConditionsWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HealthCondition'
        metadata:
          $ref: '#/components/schemas/PageMetadataNull'
    Help:
      allOf:
        - $ref: '#/components/schemas/HelpBase'
        - type: object
          required:
            - entries
          properties:
            entries:
              type: array
              items:
                type: object
                required:
                  - descriptionHtml
                  - descriptionPlainText
                  - title
                properties:
                  title:
                    type: string
                    example: Do I need to register or pay for SearchRx?
                  descriptionHtml:
                    type: string
                    example: >
                      <p>No, you can use SearchRx completely free of charge.</p>
                  descriptionPlainText:
                    type: string
                    example: No, you can use SearchRx completely free of charge.
    HelpBase:
      type: object
      required:
        - icon
        - id
        - title
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: How to Use
        icon:
          $ref: '#/components/schemas/ImageWithDarkModeSupport'
    HelpWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HelpBase'
        metadata:
          $ref: '#/components/schemas/PageMetadataNull'
    Image:
      type: object
      required:
        - appearance
        - id
        - imageUrl
        - imprint
        - manufacturer
        - title
      properties:
        id:
          type: string
          format: uuid
        imageUrl:
          type: string
          example: https://example.com/image.png
        title:
          type: string
          example: Atorvastatin Calcium 40 mg Tablet
        appearance:
          type: string
          example: Yellow, round tablet
          nullable: true
        imprint:
          type: string
          example: HLA 40
          nullable: true
        manufacturer:
          type: string
          example: Teva Pharmaceuticals USA
          nullable: true
    ImageWithDarkModeSupport:
      type: object
      required:
        - darkImageUrl
        - imageUrl
      properties:
        imageUrl:
          type: string
          example: https://example.com/image.png
        darkModeImageUrl:
          type: string
          example: https://example.com/dark-mode-image.png
          nullable: true
      description: |
        In order to support dark mode in client apps, an image designed to be shown on a dark background should be included.
    ImagesWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        metadata:
          $ref: '#/components/schemas/PageMetadataNull'
    KillSwitch:
      type: object
      required:
        - error
        - isSupported
        - url
      properties:
        isSupported:
          type: boolean
          example: false
        error:
          type: object
          required:
            - message
            - title
          properties:
            title:
              type: string
              example: New Version Available
            message:
              type: string
              example: This version is no longer supported. Please update to the latest version.
          description: Information to display to the user in an alert message. This object will be `null` when `isSupported` is true.
        url:
          type: string
          example: https://example.com/new-version-info.html
          description: The user can open this URL to review upgrade details or install the latest version of the app.
          nullable: true
    NDC:
      type: string
      example: '50090-1254-0'
      description: |
        National Drug Code from the FDA
        https://www.fda.gov/drugs/drug-approvals-and-databases/national-drug-code-directory
      nullable: true
    NewsletterSignUpPost:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: test@example.com
    NotificationPreference:
      type: object
      required:
        - enabled
        - id
        - type
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - priceAlerts
            - drugNews
        enabled:
          type: boolean
    OperatingHours:
      type: object
      required:
        - close
        - open
      properties:
        open:
          type: object
          required:
            - day
            - time
          properties:
            day:
              type: string
              example: Sunday
            time:
              type: string
              example: '08:30'
              description: The hour and minute in 24-hour time.
        close:
          type: object
          required:
            - day
            - time
          properties:
            day:
              type: string
              example: Sunday
            time:
              type: string
              example: '22:00'
              description: The hour and minute in 24-hour time.
      description: Indicates a single opening and closing window for this location.
    PageMetadata:
      type: object
      required:
        - count
        - currentPage
        - totalCount
        - totalPages
      properties:
        count:
          type: integer
          example: 1
          description: The number of results in this payload.
        currentPage:
          type: integer
          example: 1
          description: The current page index.
        totalCount:
          type: integer
          example: 1
          description: The total number of results available.
        totalPages:
          type: integer
          example: 1
          description: The total number of pages available.
    PageMetadataNull:
      type: object
      example: null
    Place:
      type: object
      required:
        - coordinates
        - name
      properties:
        name:
          type: string
          example: Minneapolis, MN
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    PlacesWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Place'
        metadata:
          $ref: '#/components/schemas/PageMetadataNull'
    Preferences:
      type: object
      required:
        - favoriteLocations
        - notifications
      properties:
        favoriteLocations:
          type: array
          items:
            $ref: '#/components/schemas/FavoriteLocationPreference'
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/NotificationPreference'
    PreferencesPatch:
      type: object
      required:
        - favoriteLocations
        - notifications
      properties:
        favoriteLocations:
          type: array
          items:
            type: object
            required:
              - locationId
            properties:
              locationId:
                type: string
                format: uuid
          description: These values will overwrite the existing list of favorite locations.
        notifications:
          type: array
          items:
            type: object
            required:
              - enabled
              - id
            properties:
              id:
                type: string
                format: uuid
              enabled:
                type: boolean
    Price:
      type: object
      required:
        - couponId
        - formulation
        - isLowestPrice
        - originalPrice
        - price
        - priceLevel
        - quantity
        - retailer
      properties:
        formulation:
          $ref: '#/components/schemas/Formulation'
        quantity:
          $ref: '#/components/schemas/Quantity'
        retailer:
          $ref: '#/components/schemas/Retailer'
        originalPrice:
          $ref: '#/components/schemas/PriceAmount'
        price:
          $ref: '#/components/schemas/PriceAmount'
        priceLevel:
          $ref: '#/components/schemas/PriceLevel'
        isLowestPrice:
          type: boolean
        couponId:
          type: string
          format: uuid
          description: If the current user already has a coupon for this formulation, then this value will reflect the existing coupon's ID.
          nullable: true
    PriceAmount:
      type: object
      required:
        - amount
        - currency
        - display
      properties:
        amount:
          type: string
          example: "10.50"
          description: The decimal value of the price encoded as a string. String representation prevents encoding errors since JSON doesn't allow numeric precision to be specified. Clients should parse this value as a string and convert to decimal.
        currency:
          type: string
          description: The ISO 4217 currency code for this price.
          example: USD
        display:
          type: string
          example: "$10.50"
    PriceLevel:
      type: string
      enum:
        - low
        - medium
        - high
    PricesWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Price'
        metadata:
          $ref: '#/components/schemas/PageMetadataNull'
    PricesComposite:
      type: object
      required:
        - couponId
        - highPrice
        - lowPrice
      properties:
        lowPrice:
          $ref: '#/components/schemas/PriceAmount'
        highPrice:
          $ref: '#/components/schemas/PriceAmount'
        couponId:
          type: string
          format: uuid
          description: If the current user already has a composite-price coupon for this formulation, then this value will reflect the existing coupon's ID.
          nullable: true
    Quantity:
      type: object
      required:
        - value
        - display
        - ndc
      properties:
        value:
          type: number
          format: double
          example: 30
        display:
          type: string
          example: "30 tablets"
        ndc:
          $ref: '#/components/schemas/NDC'
    Retailer:
      type: object
      required:
        - id
        - isFavorite
        - isMembershipRequired
        - location
        - logoUrl
        - membershipDetailsUrl
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Target
        isFavorite:
          type: boolean
          description: |
            [Post-MVP] Indicates whether or not this retailer has a location in the current user's favorites.
        isMembershipRequired:
          type: boolean
        membershipDetailsUrl:
          type: string
          example: https://rcam.target.com/#/
          nullable: true
        logo:
          $ref: '#/components/schemas/ImageWithDarkModeSupport'
        location:
          $ref: '#/components/schemas/RetailerLocation'
    RetailersWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Retailer'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    RetailerLocation:
      type: object
      required:
        - addressLine1
        - addressLine2
        - city
        - coordinates
        - hours
        - id
        - isFavorite
        - phoneNumber
        - state
        - tzDatabaseName
        - websiteUrl
        - zipCode
      properties:
        id:
          type: string
          format: uuid
        isFavorite:
          type: boolean
          description: |
            [Post-MVP] Indicates whether or not this location is included in the current user's favorites.
        addressLine1:
          type: string
          example: 123 Main St.
          nullable: true
        addressLine2:
          type: string
          nullable: true
        city:
          type: string
          example: Minneapolis
          nullable: true
        state:
          type: string
          example: MN
          nullable: true
        zipCode:
          type: string
          example: '55401'
          nullable: true
        tzDatabaseName:
          type: string
          example: America/Chicago
          description: The `tz database` name for this location's time zone. Used for calculating whether or not this location is open for the current user. This has a slight advantage over UTC offset, since clients can independently account for daylight saving time when applicable.
          nullable: true
        hours:
          type: array
          items:
            $ref: '#/components/schemas/OperatingHours'
        websiteUrl:
          type: string
          example: https://target.com
          nullable: true
        phoneNumber:
          type: string
          example: (612) 111-1111
          nullable: true
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    RetailerLocationsWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RetailerLocation'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    SearchResult:
      type: object
      required:
        - id
        - subtitle
        - title
        - type
        - urlSlug
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - drug
            - drugClass
            - healthCondition
        title:
          type: string
        subtitle:
          type: string
          nullable: true
        urlSlug:
          type: string
    SearchWrapper:
      type: object
      required:
        - data
        - metadata
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
      example:
        data:
          -
            id: 4de2d854-cdef-4cb7-a5f6-5996b0120a75
            type: drug
            title: Atorvastatin
            subtitle: Generic Lipitor
            urlSlug: atorvastatin
          -
            id: 9bd9b0f5-261a-4b5e-9fd6-394fa54582c7
            type: drug
            title: Lipitor
            subtitle: Atorvastatin
            urlSlug: lipitor
          -
            id: 9cf9ef80-59d9-446b-b311-2caeaaeff43c
            type: drug
            title: Altoprev
            subtitle: null
            urlSlug: altoprev
        metadata:
          count: 1
          currentPage: 1
          totalCount: 3
          totalPages: 1
    SendAppLinkPost:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          type: string
          example: (612) 111-1111
    User:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier for the user. This value should be sent as the `X-Account-ID` header value for subsequent requests.
    Variant:
      type: object
      required:
        - id
        - isGeneric
        - name
        - urlSlug
      properties:
        id:
          type: string
          format: uuid
          example: 8275d9d5-cc08-4d1c-b37d-2855da4b6a4f
        urlSlug:
          type: string
          example: lipitor
          nullable: true
        name:
          type: string
          example: Lipitor
        isGeneric:
          type: boolean
          example: false
          description: Indicates whether or not this drug is generic.
      description: |
        This represents an alternative version of this drug. Variants include both generic and brand names.
  responses:
    Error404:
      description: |
        Returned when:
          - The resource with the specified ID can't be found.
          - The current user does not have access to the resource with this ID.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error404'
    Error422:
      description: |
        Returned when request fails due to a validation error–usually a missing a required field.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error422'
  examples:
    CouponWithCompositePrice:
      summary: Coupon (compositePrice)
      value:
        id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        bin: 009999
        grp: ABC123
        pcn: ABCDEF
        uid: ABC1234567
        url: https://bit.ly/2MUVNgT
        drugStatus:
          type: active
          details:
        variants:
        - id: 8275d9d5-cc08-4d1c-b37d-2855da4b6a4f
          urlSlug: lipitor
          name: Lipitor
          isGeneric: false
        formulation:
          id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          drugId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          gpi14: '39400010100330'
          name: Atorvastatin
          isGeneric: true
          form: Tablet
          pluralForm: Tablets
          dosage:
            value: 40
            unit: mg
            display: 40 mg
          commonQuantities:
          - value: 30
            display: 30 tablets
            ndc: 50090-1254-0
        quantity:
          value: 30
          display: 30 tablets
          ndc: 50090-1254-0
        price:
          type: compositePrice
          compositePrice:
            lowPrice:
              amount: '10.50'
              currency: USD
              display: "$10.50"
            highPrice:
              amount: '10.50'
              currency: USD
              display: "$10.50"
    CouponWithRetailerPrice:
      summary: Coupon (retailerPrice)
      value:
        id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        bin: 009999
        grp: ABC123
        pcn: ABCDEF
        uid: ABC1234567
        url: https://bit.ly/2MUVNgT
        drugStatus:
          type: active
          details:
        variants:
        - id: 8275d9d5-cc08-4d1c-b37d-2855da4b6a4f
          urlSlug: lipitor
          name: Lipitor
          isGeneric: false
        formulation:
          id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          drugId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          gpi14: '39400010100330'
          name: Atorvastatin
          isGeneric: true
          form: Tablet
          pluralForm: Tablets
          dosage:
            value: 40
            unit: mg
            display: 40 mg
          commonQuantities:
          - value: 30
            display: 30 tablets
            ndc: 50090-1254-0
        quantity:
          value: 30
          display: 30 tablets
          ndc: 50090-1254-0
        price:
          type: retailerPrice
          retailerPrice:
            price:
              amount: '10.50'
              currency: USD
              display: "$10.50"
            priceLevel: low
            retailer:
              id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              name: Target
              isFavorite: true
              isMembershipRequired: true
              membershipDetailsUrl: https://rcam.target.com/#/
              logo:
                imageUrl: https://example.com/image.png
                darkModeImageUrl: https://example.com/dark-mode-image.png
              location:
                id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                isFavorite: true
                addressLine1: 123 Main St.
                addressLine2: string
                city: Minneapolis
                state: MN
                zipCode: '55401'
                tzDatabaseName: America/Chicago
                hours:
                - open:
                    day: Sunday
                    time: '08:30'
                  close:
                    day: Sunday
                    time: '22:00'
                websiteUrl: https://target.com
                phoneNumber: "(612) 111-1111"
                coordinates:
                  latitude: 44.949782
                  longitude: -93.285233
tags:
  - name: MVP
    description: These features are planned for MVP.
  - name: Post-MVP
    description: These features are planned for post-MVP.
