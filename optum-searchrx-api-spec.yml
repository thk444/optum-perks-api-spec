openapi: 3.0.0
info:
  version: '1.0.0'
  title: SearchRx REST API
  contact:
    name: Livefront
    url: https://livefront.com
  description: >
    REST API specification for SearchRx
security:
  - application:
      - read
      - write
paths:
  /account:
    post:
      description: |
        Creates a new anonymous user account.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /cities:
    get:
      description: |
        Returns cities, states, or ZIP Codes that match the query.

        This endpoint is intended to be used to display results in real time as the user types.

        When the are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/citiesQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitiesWrapper'
  /content:
    get:
      description: |
        Returns dynamic app content.
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppContentWrapper'
  /coupons:
    get:
      description: |
        Returns all of the coupons for the specified account ID.

        When available, clients should specify their current location via the `latitude` and `longitude` query parameters. Results should include `nearestLocation` relative to the specified location.

        When the are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/latitude'
        - $ref: '#/components/parameters/longitude'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponsWrapper'
    post:
      description: |
        Creates a new coupon for the specified GPI14.
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CouponPost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
        '422':
          $ref: '#/components/responses/Error422'
  /coupons/{id}:
    get:
      description: |
        Returns details for the coupon with the specified ID for the specified account ID.

        When available, clients should specify their current location via the `latitude` and `longitude` query parameters. Results should include `nearestLocation` relative to the specified location.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
        - $ref: '#/components/parameters/latitude'
        - $ref: '#/components/parameters/longitude'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
        '404':
          $ref: '#/components/responses/Error404'
    delete:
      description: |
        Deletes the coupon with the specified ID for the specified account ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/Error404'
  /coupons/{id}/share:
    post:
      description: |
        Shares an existing coupon for the specified coupon ID and account ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CouponSharePost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponShare'
        '404':
          $ref: '#/components/responses/Error404'
        '422':
          $ref: '#/components/responses/Error422'
  /devices:
    post:
      description: |
        Creates a new device for the current user with the specified properties.
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DevicePost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '422':
          $ref: '#/components/responses/Error422'
  /drugs:
    get:
      description: |
        Returns a list of drugs that match the query parameters.

        This endpoint is intended to be used to display results in real time as the user types.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugsQuery'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/drugsFilter'
        - $ref: '#/components/parameters/drugsSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugsWrapper'
  /drugs/{id}:
    get:
      description: |
        Returns the drug with the specified ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drug'
        '404':
          $ref: '#/components/responses/Error404'
  /drugs/{id}/images:
    get:
      description: |
        Returns images for the drug with the specified ID.

        When the are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesWrapper'
        '404':
          $ref: '#/components/responses/Error404'
  /drug-classes:
    get:
      description: |
        Returns all the drug classes.
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugClassesWrapper'
  /drug-classes/{id}:
    get:
      description: |
        Returns the drug class with the specified ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugClassId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugClass'
        '404':
          $ref: '#/components/responses/Error404'
  /drug-classes/{id}/drugs:
    get:
      description: |
        Returns drugs associated with the specified drug class.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugClassId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/drugsSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugsWrapper'
        '404':
          $ref: '#/components/responses/Error404'
  /health-conditions:
    get:
      description: |
        Returns all the health conditions.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/healthConditionsFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthConditionsWrapper'
  /health-conditions/{id}:
    get:
      description: |
        Returns the health condition with the specified ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/healthConditionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCondition'
        '404':
          $ref: '#/components/responses/Error404'
  /health-conditions/{id}/drugs:
    get:
      description: |
        Returns drugs associated with the specified health condition.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/healthConditionId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/drugsSort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugsWrapper'
        '404':
          $ref: '#/components/responses/Error404'
  /kill-switch:
    get:
      description: |
        Check to see if a given client is still supported.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - name: platform
          in: query
          schema:
            type: string
            enum:
              - iOS
              - Android
          required: true
        - name: model
          in: query
          schema:
            type: string
          example: iPhone X
          required: true
        - name: osVersion
          in: query
          schema:
            type: string
          example: iOS 12.2
          required: true
        - name: appVersion
          in: query
          schema:
            type: string
          example: '1.4'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KillSwitch'
  /preferences:
    get:
      description: |
        Returns the current user's preferences.
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
    patch:
      description: |
        Updates the current user's preferences.
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PreferencesPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
        '422':
          $ref: '#/components/responses/Error422'
  /prices:
    get:
      description: |
        Returns prices based on the specified GPI14 that encodes brand, form, dosage, and quantity.

        When `radius` is specified:
          - `center[latitude]` and `center[longitude]` are required.
          - Results will be displayed on an interactive map.
          - All matching locations in the search area are are returned.

        When `radius` is omitted:
          - `center[latitude]` and `center[longitude]` are ignored.
          - Only one result per matching retailer is returned for the nearest location to `searchLocation` for that retailer.

        When the are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/gpi14'
        - $ref: '#/components/parameters/searchLocationType'
        - $ref: '#/components/parameters/searchLocationZipCode'
        - $ref: '#/components/parameters/searchLocationLatitude'
        - $ref: '#/components/parameters/searchLocationLongitude'
        - $ref: '#/components/parameters/longitude'
        - $ref: '#/components/parameters/latitude'
        - $ref: '#/components/parameters/radius'
        - $ref: '#/components/parameters/centerLatitude'
        - $ref: '#/components/parameters/centerLongitude'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesWrapper'
  /retailers:
    get:
      description: |
        Returns retailers sorted alphabetically.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailersWrapper'
  /retailers/{id}/locations:
    get:
      description: |
        Returns retailer locations that match the specified search criteria.

        Results are in order by distance from the search location.

        When `radius` is specified:
          - `center[latitude]` and `center[longitude]` are required.
          - `page` and `limit` are ignored.
          - Results will be displayed on an interactive map.
          - All matching locations in the search area are are returned.

        When `radius` is omitted:
          - `center[latitude]` and `center[longitude]` are ignored.

        When the are no results, an empty array will be returned.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/retailerId'
        - $ref: '#/components/parameters/searchLocationRequiredType'
        - $ref: '#/components/parameters/searchLocationZipCode'
        - $ref: '#/components/parameters/searchLocationLatitude'
        - $ref: '#/components/parameters/searchLocationLongitude'
        - $ref: '#/components/parameters/radius'
        - $ref: '#/components/parameters/centerLatitude'
        - $ref: '#/components/parameters/centerLongitude'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailerLocationsWrapper'
        '404':
          $ref: '#/components/responses/Error404'
components:
  parameters:
    accountId:
      in: header
      name: X-Account-ID
      schema:
        type: string
        format: uuid
      description: The current user's ID, if any.
    centerLatitude:
      in: query
      name: center[latitude]
      schema:
        type: number
        format: double
      description: The latitude of the center point of the search area. Required if `radius` is specified.
      example: 44.949782
    centerLongitude:
      in: query
      name: center[longitude]
      schema:
        type: number
        format: double
      description: The longitude of the center point of the search area. Required if `radius` is specified.
      example: -93.285233
    citiesQuery:
      in: query
      name: q
      schema:
        type: string
      required: true
      description: Query to match all or part of a city, state, or ZIP Code.
      example: minneap
    couponId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given coupon.
    drugClassId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a drug class.
    drugId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given drug.
    drugsFilter:
      in: query
      name: filter
      schema:
        type: string
        enum:
          - common
          - popular
      required: false
      description: |
        Filters the results based on the specified value.
          - `common`: Includes the most common drugs. These are configured by hand on the backend specifically for SEO.
          - `popular`: Includes the most popular drugs.
      example: common
    drugsQuery:
      in: query
      name: q
      schema:
        type: string
      description: Query to match all or part of a drug's generic or brand name.
      example: Atorvastatin
    drugsSort:
      in: query
      name: sort
      schema:
        type: string
        enum:
          - name
          - -name
          - popularity
          - -popularity
      required: false
      description: |
        Sorts the results based on the specified value.
          - `name`: Sorts results alphabetically.
          - `-name`: Sorts results reverse-alphabetically.
          - `popularity`: Sorts results by popularity. Most popular first.
          - `-popularity`: Sorts results by popularity. Least popular first.
      example: name
    gpi14:
      in: query
      name: gpi14
      schema:
        type: string
        example: '39400010100330'
      required: true
      description: >
        Medispan Generic Product Identifier
        https://www.wolterskluwercdi.com/drug-data/gpi/
    healthConditionId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a health condition.
    healthConditionsFilter:
      in: query
      name: filter
      schema:
        type: string
        enum:
          - common
      required: false
      description: |
        Filters the results based on the specified value.
          - `common`: Includes the most common health conditions. These are configured by hand on the backend specifically for SEO.
      example: common
    latitude:
      in: query
      name: latitude
      schema:
        type: number
        format: double
      description: The user's current location latitude.
      example: 44.949782
    limit:
      in: query
      name: limit
      schema:
        type: integer
      description: Indicates how many results to return per page.
      example: 50
    longitude:
      in: query
      name: longitude
      schema:
        type: number
        format: double
      description: The user's current location longitude.
      example: -93.285233
    page:
      in: query
      name: page
      schema:
        type: integer
      description: Indicates which page of results to load.
      example: 3
    radius:
      in: query
      name: radius
      schema:
        type: number
        format: double
      description: The radius in meters of the search area.
      example: 100
    retailerId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given retailer.
    searchLocationLatitude:
      in: query
      name: searchLocation[latitude]
      schema:
        type: number
        format: double
      description: The user's current location latitude required when `searchLocation` type is `currentLocation`.
      example: 44.949782
    searchLocationLongitude:
      in: query
      name: searchLocation[longitude]
      schema:
        type: number
        format: double
      description: The user's current location longitude required when `searchLocation` type is `currentLocation`.
      example: -93.285233
    searchLocationType:
      in: query
      name: searchLocation[type]
      schema:
        type: string
        enum:
          - none
          - zipCode
          - currentLocation
      required: true
      description: |
        May be none, a ZIP Code, or lat/lng.
          - `none`: No location information will be provided.
          - `zipCode`: ZIP Code will be included when the user searched for a city.
          - `currentLocation`: Latitude and longitude will be included when the user has enabled location services on their device.
    searchLocationRequiredType:
      in: query
      name: searchLocation[type]
      schema:
        type: string
        enum:
          - zipCode
          - currentLocation
      required: true
      description: |
        May be a ZIP Code, or lat/lng.
          - `zipCode`: ZIP Code will be included when the user searched for a city.
          - `currentLocation`: Latitude and longitude will be included when the user has enabled location services on their device.
    searchLocationZipCode:
      in: query
      name: searchLocation[zipCode]
      schema:
        type: string
      description: The ZIP Code required when `searchLocation` type is `zipCode`.
  schemas:
    AppContent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: Help
        html:
          type: string
          example: >
            <p>This is the content for the Help section.</p>
    AppContentWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AppContent'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    Brand:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Lipitor
        forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
        defaultFormId:
          type: string
          format: uuid
          description: Will be null if there is no default.
    CitiesWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/City'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    City:
      type: object
      properties:
        name:
          type: string
          example: Minneapolis, MN
        zip:
          type: string
          example: '55401'
    Content:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: Proper Use
        html:
          type: string
          example: >
            <p>This is the content for the Proper Use section.</p>
        legalDisclaimer:
          type: string
          example: A disclaimer is generally any statement intended to specify or delimit the scope of rights and obligations that may be exercised and enforced by parties in a legally recognized relationship. In contrast to other terms for legally operative language, the term disclaimer usually implies situations that involve some level of uncertainty, waiver, or risk.
    Coupon:
      type: object
      properties:
        id:
          type: string
          format: uuid
        bin:
          type: string
          example: '009999'
        grp:
          type: string
          example: ABC123
        pcn:
          type: string
          example: ABCDEF
        uid:
          type: string
          example: ABC1234567
        price:
          $ref: '#/components/schemas/Price'
        nearestLocation:
          $ref: '#/components/schemas/RetailerLocation'
    CouponsWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    CouponPost:
      type: object
      properties:
        gpi14:
          $ref: '#/components/schemas/GPI14'
        locationId:
          type: string
          format: uuid
    CouponShare:
      type: object
      properties:
        defaultShareText:
          type: string
          example: >
            Atorvastatin Card:
            MemberID: ABC1234567
            RxGroup: ABC123
            RxBin: 009999
            RxPCN: ABCDEF
            Pharmacist: 1-888-111-1111
            Questions: 1-888-111-1111
            https://searchrx.com/123
        defaultShareImageUrl:
          type: string
          example: https://example.com/coupon.png
        coupon:
          $ref: '#/components/schemas/Coupon'
    CouponSharePost:
      type: object
      properties:
        shareType:
          type: string
          enum:
            - textMessage
            - email
            - mobileAppShareSheet
        email:
          type: string
          format: email
        phoneNumber:
          type: string
          example: '612-111-1111'
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        deviceToken:
          type: string
          format: uuid
          description: Push notification token provided by iOS or Android.
        deviceIdentifier:
          type: string
          format: uuid
          description: Persistent, unique identifier for this device generated by the client.
        platform:
          type: string
          enum:
            - iOS
            - Android
        model:
          type: string
          example: iPhone X
        osVersion:
          type: string
          example: iOS 12.2
        appVersion:
          type: string
          example: '1.4'
    DevicePost:
      type: object
      properties:
        deviceToken:
          type: string
          format: uuid
          description: Push notification token provided by iOS or Android.
        deviceIdentifier:
          type: string
          format: uuid
          description: Persistent, unique identifier for this device generated by the client.
        platform:
          type: string
          enum:
            - iOS
            - Android
        model:
          type: string
          example: iPhone X
        osVersion:
          type: string
          example: iOS 12.2
        appVersion:
          type: string
          example: '1.4'
    Dosage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        value:
          type: integer
          example: 40
        unit:
          type: string
          example: mg
        quantities:
          type: array
          items:
            $ref: '#/components/schemas/Quantity'
        defaultQuantityId:
          type: string
          format: uuid
          description: Will be null if there is no default.
    DollarValue:
      type: integer
      example: 1050
      description: Dollar value in cents. e.g. 1050 equals $10.50
    Drug:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Atorvastatin
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        defaultBrandId:
          type: string
          format: uuid
          description: Will be null if the default is generic.
        forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
        defaultFormId:
          type: string
          format: uuid
          description: Will be null if there is no default.
        info:
          type: array
          items:
            $ref: '#/components/schemas/Content'
        commonBrandNames:
          type: string
          example: Lipitor
        theraputicClassifications:
          type: string
          example: Antihyperlipidemic
        pharmacologicClassifications:
          type: string
          example: HMG-COA Reductase Inhibitor
        urlSlug:
          type: string
          example: atorvastatin
        medicare:
          type: object
          properties:
            isCovered:
              type: boolean
            explanation:
              type: string
              example: 100% of Medicare Part D and Medicare Advantage plans cover this drug.
        sideEffects:
          type: object
          properties:
            overview:
              type: string
              example: This is not a complete list of side effects and others may occur. Call your doctor for medical advice about side effects.
            commonSideEffectsOverview:
              type: string
              example: Aliquam in scelerisque neque, vitae dignissim eros. In non luctus augue, sed pellentesque risus. Etiam pellentesque rutrum elit, eu lobortis turpis efficitur ullamcorper.
            commonSideEffects:
              type: array
              items:
                type: string
                example: dizziness
            rareSideEffectsOverview:
              type: string
              example: Aliquam in scelerisque neque, vitae dignissim eros. In non luctus augue, sed pellentesque risus. Etiam pellentesque rutrum elit, eu lobortis turpis efficitur ullamcorper.
            rareSideEffects:
              type: array
              items:
                type: string
                example: dizziness
    DrugClass:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: ACE Inhibitors
        description:
          type: string
          example: An angiotensin-converting-enzyme inhibitor (ACE inhibitor) is a pharmaceutical drug used primarily for the treatment of hypertension (elevated blood pressure) and congestive heart failure.
        html:
          type: string
          example: >
            <p>This group of drugs causes relaxation of blood vessels as well as a decrease in blood volume, which leads to lower blood pressure and decreased oxygen demand from the heart. They inhibit the angiotensin-converting enzyme, an important component of the renin–angiotensin system.

            Frequently prescribed ACE inhibitors include benazepril, zofenopril, perindopril, trandolapril, captopril, enalapril, lisinopril, and ramipril.</p>
        urlSlug:
          type: string
          example: ace-inhibitors
        healthConditions:
          items:
            $ref: '#/components/schemas/DrugClassHealthCondition'
          description: Indicates which health conditions this class of drug is popularly prescribed for.
    DrugClassesWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DrugClass'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    DrugsWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Drug'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    Error404:
      type: object
      properties:
        message:
          type: string
          example: The resource {resource name} could not be found.
    Error422:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              fieldName:
                type: string
                example: '{fieldName}'
              message:
                type: string
                example: The {fieldName} field cannot be blank.
    FavoriteLocationPreference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        retailer:
          $ref: '#/components/schemas/Retailer'
    Form:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Tablet
        dosages:
          type: array
          items:
            $ref: '#/components/schemas/Dosage'
        defaultDosageId:
          type: string
          format: uuid
          description: Will be null if there is no default.
    GPI14:
      type: string
      example: '39400010100330'
      description: >
        Medispan Generic Product Identifier
        https://www.wolterskluwercdi.com/drug-data/gpi/
    HealthCondition:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The clinical name for this condition.
          example: Allergic Rhinitis
        commonName:
          type: string
          description: Commonly known as.
          example: Allergies
        description:
          type: string
          example: This is a brief description of the health condition.
        html:
          type: string
          example: >
            <p>A damaging immune response by the body to a substance, especially pollen, fur, a particular food, or dust, to which it has become hypersensitive.</p>
        heroImageUrl:
          type: string
          example: https://example.com/image.png
        heroIconUrl:
          type: string
          example: https://example.com/image.png
        isCommon:
          type: boolean
          description: Indicates whether or not this is a common health condition.
        urlSlug:
          type: string
          example: allergies
    HealthConditionsWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HealthCondition'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
        imageUrl:
          type: string
          example: https://example.com/image.png
        title:
          type: string
          example: Atorvastatin Calcium 40 mg Tablet
        appearance:
          type: string
          example: Yellow, round tablet
        imprint:
          type: string
          example: HLA 40
        manufacturer:
          type: string
          example: Teva Pharmaceuticals USA
    ImagesWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    KillSwitch:
      type: object
      properties:
        isSupported:
          type: boolean
          example: false
        error:
          type: object
          properties:
            title:
              type: string
              example: New Version Available
            message:
              type: string
              example: This version is no longer supported. Please updated to the latest version.
        url:
          type: string
          example: https://example.com/new-version-info.html
          description: The user can open this URL to review upgrade details or install the latest version of the app.
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
          example: 44.949782
        longitude:
          type: number
          format: double
          example: -93.285233
    NDC:
      type: string
      example: '68645046054'
      description: >
        National Drug Code from the FDA
        https://www.fda.gov/drugs/drug-approvals-and-databases/national-drug-code-directory
    NotificationPreference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - priceAlerts
            - drugNews
        enabled:
          type: boolean
    PageMetadata:
      type: object
      properties:
        count:
          type: integer
          example: 1
          description: The number of results in this payload.
        currentPage:
          type: integer
          example: 1
          description: The current page index.
        totalCount:
          type: integer
          example: 1
          description: The total number of results available.
        totalPages:
          type: integer
          example: 1
          description: The total number of pages available.
    Preferences:
      type: object
      properties:
        favoriteLocations:
          type: array
          items:
            $ref: '#/components/schemas/FavoriteLocationPreference'
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/NotificationPreference'
    PreferencesPatch:
      type: object
      properties:
        favoriteLocations:
          type: array
          items:
            type: object
            properties:
              locationId:
                type: string
                format: uuid
          description: These values will overwrite the existing list of favorite locations.
        notifications:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              enabled:
                type: boolean
    DrugClassHealthCondition:
      type: object
      properties:
        healthCondition:
          $ref: '#/components/schemas/HealthCondition'
        popularity:
          type: string
          example: '35%'
          description: This value is displayed to the user to indicate popularity.
    DrugHealthCondition:
      type: object
      properties:
        healthCondition:
          $ref: '#/components/schemas/HealthCondition'
        popularity:
          type: string
          example: 'Most Popular'
          description: This value is displayed to the user to indicate popularity.
    Price:
      type: object
      properties:
        retailer:
          $ref: '#/components/schemas/Retailer'
        originalPrice:
          $ref: '#/components/schemas/DollarValue'
        price:
          $ref: '#/components/schemas/DollarValue'
        priceLevel:
          type: string
          enum:
            - low
            - medium
            - high
        priceTypes:
          type: array
          items:
            type: string
            enum:
              - retail
              - coupon
              - searchRx
            description: |
              `searchRx` is a placeholder for a future price classification specific to this app.
        fulfillmentType:
          type: string
          enum:
            - retail
            - mailOrder
        isLowestPrice:
          type: boolean
        otherPrices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: Nested price objects for comparison to this price.
    PricesWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Price'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    Quantity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        value:
          type: integer
          example: 90
        unit:
          type: string
          example: tablets
        ndc:
          $ref: '#/components/schemas/NDC'
        gpi14:
          $ref: '#/components/schemas/GPI14'
    Retailer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Target
        isPopular:
          type: boolean
        isFavorite:
          type: boolean
          description: Indicates whether or not this retailer has a location in the current user's favorites.
        isMembershipRequired:
          type: boolean
        membershipDetailsUrl:
          type: string
          example: https://rcam.target.com/#/
        logoUrl:
          type: string
          example: https://example.com/logo.png
        location:
          $ref: '#/components/schemas/RetailerLocation'
    RetailersWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Retailer'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    RetailerLocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        isFavorite:
          type: boolean
          description: Indicates whether or not this location is included in the current user's favorites.
        addressLine1:
          type: string
          example: 123 Main St.
        addressLine2:
          type: string
        city:
          type: string
          example: Minneapolis
        state:
          type: string
          example: MN
        zipCode:
          type: string
          example: '55401'
        hours:
          type: array
          items:
            type: object
            properties:
              dayOfTheWeek:
                type: string
                example: Sunday
              opensAt:
                type: integer
                example: 8
                description: Hour of the day in 24-hour time when the store opens.
              closesAt:
                type: integer
                example: 22
                description: Hour of the day in 24-hour time when the store closes.
        websiteUrl:
          type: string
          example: https://target.com
        phoneNumber:
          type: string
          example: (612) 111-1111
        coordinates:
          $ref: '#/components/schemas/Location'
        rating:
          type: object
          properties:
            title:
              type: string
              example: 4.1 out of 5 Stars
            description:
              type: string
              example: From 52 reviews on Yelp
            url:
              type: string
              example: https://www.yelp.com/biz/target-minneapolis-2
        distanceFromSearchLocation:
          type: number
          format: double
          description: The distance in meters to this location from the search location.
    RetailerLocationsWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RetailerLocation'
        metadata:
          $ref: '#/components/schemas/PageMetadata'
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier for the user. This value should be sent as the `X-Account-ID` header value for subsequent requests.
  responses:
    Error404:
      description: |
        Returned when:
          - The resource with the specified ID can't be found.
          - The current user does not have access to the resource with this ID.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error404'
    Error422:
      description: |
        Returned when request fails due to a validation error–usually a missing a required field.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error422'
