openapi: 3.0.0
info:
  version: '1.0.0'
  title: SearchRx REST API
  contact:
    name: Livefront
    url: https://livefront.com
  description: >
    REST API specification for SearchRx
security:
  - application:
      - read
      - write
paths:
  /account:
    post:
      description: |
        Creates a new anonymous user account.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /cities:
    get:
      description: |
        Returns cities, states, or ZIP Codes that match the query.

        This endpoint is intended to be used to display results in real time as the user types.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/citiesQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
  /content:
    get:
      description: |
        Returns dynamic app content.
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppContent'
  /coupons:
    get:
      description: |
        Returns all of the coupons for the specified account ID.

        When available, clients should specify their current location via the `latitude` and `longitude` query parameters. Results should include `nearestLocation` relative to the specified location.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/latitude'
        - $ref: '#/components/parameters/longitude'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coupon'
    post:
      description: |
        Creates a new coupon for the specified GPI14.
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CouponPost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Coupon'
  /coupons/{id}:
    get:
      description: |
        Returns details for the coupon with the specified ID for the specified account ID.

        When available, clients should specify their current location via the `latitude` and `longitude` query parameters. Results should include `nearestLocation` relative to the specified location.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
        - $ref: '#/components/parameters/latitude'
        - $ref: '#/components/parameters/longitude'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Coupon'
    delete:
      description: |
        Deletes the coupon with the specified ID for the specified account ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      responses:
        '204':
          description: No Content
  /coupons/{id}/share:
    post:
      description: |
        Shares an existing coupon for the specified coupon ID and account ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/couponId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CouponSharePost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponShare'
  /devices:
    post:
      description: |
        Creates a new device for the current user with the specified properties.
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DevicePost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
  /drugs:
    get:
      description: |
        Returns a list of drugs that match the query parameters.

        This endpoint is intended to be used to display results in real time as the user types.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugsQuery'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - common
              - popular
          required: false
          description: |
            Filters the results based on the specified value.
              - `common`: Includes the most common drugs. These are configured by hand on the backend specifically for SEO.
              - `popular`: Includes the most popular drugs.
          example: common
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - name
              - -name
              - popularity
              - -popularity
          required: false
          description: |
            Sorts the results based on the specified value.
              - `name`: Sorts results alphabetically.
              - `-name`: Sorts results reverse-alphabetically.
              - `popularity`: Sorts results by popularity. Most popular first.
              - `-popularity`: Sorts results by popularity. Least popular first.
          example: common
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Drug'
  /drugs/{id}:
    get:
      description: |
        Returns the drug with the specified ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drug'
  /drugs/{id}/images:
    get:
      description: |
        Returns images for the drug with the specified ID.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/drugId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
  /killswitch:
    get:
      description: |
        Check to see if a given client is still supported.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - name: platform
          in: query
          schema:
            type: string
            enum:
              - iOS
              - Android
          required: true
        - name: model
          in: query
          schema:
            type: string
          example: iPhone X
          required: true
        - name: osVersion
          in: query
          schema:
            type: string
          example: iOS 12.2
          required: true
        - name: appVersion
          in: query
          schema:
            type: string
          example: 1.4
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Killswitch'
  /preferences:
    get:
      description: |
        Returns the current user's preferences.
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
    patch:
      description: |
        Updates the current user's preferences.
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PreferencesPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
  /prices:
    get:
      description: |
        Returns prices based on the specified GPI14 that encodes brand, form, dosage, and quantity.

        When `radius` is specified:
          - `center[latitude]` and `center[longitude]` are required.
          - Results will be displayed on an interactive map.
          - All matching locations in the search area are are returned.

        When `radius` is omitted:
          - `center[latitude]` and `center[longitude]` are ignored.
          - Only one result per matching retailer is returned for the nearest location to `searchLocation` for that retailer.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/gpi14'
        - $ref: '#/components/parameters/searchLocationType'
        - $ref: '#/components/parameters/searchLocationZipCode'
        - $ref: '#/components/parameters/searchLocationLatitude'
        - $ref: '#/components/parameters/searchLocationLongitude'
        - $ref: '#/components/parameters/longitude'
        - $ref: '#/components/parameters/latitude'
        - $ref: '#/components/parameters/radius'
        - $ref: '#/components/parameters/centerLatitude'
        - $ref: '#/components/parameters/centerLongitude'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
  /retailers:
    get:
      description: |
        Returns retailers sorted alphabetically.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Retailer'
  /retailers/{id}/locations:
    get:
      description: |
        Returns retailer locations that match the specified search criteria.

        Results are in order by distance from the search location.

        When `radius` is specified:
          - `center[latitude]` and `center[longitude]` are required.
          - `page` and `limit` are ignored.
          - Results will be displayed on an interactive map.
          - All matching locations in the search area are are returned.

        When `radius` is omitted:
          - `center[latitude]` and `center[longitude]` are ignored.
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/retailerId'
        - $ref: '#/components/parameters/searchLocationRequiredType'
        - $ref: '#/components/parameters/searchLocationZipCode'
        - $ref: '#/components/parameters/searchLocationLatitude'
        - $ref: '#/components/parameters/searchLocationLongitude'
        - $ref: '#/components/parameters/radius'
        - $ref: '#/components/parameters/centerLatitude'
        - $ref: '#/components/parameters/centerLongitude'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetailerLocation'
components:
  parameters:
    accountId:
      in: header
      name: X-Account-ID
      schema:
        type: string
        format: uuid
      description: The current user's ID, if any.
    centerLatitude:
      in: query
      name: center[latitude]
      schema:
        type: number
        format: double
      description: The latitude of the center point of the search area. Required if `radius` is specified.
      example: 44.949782
    centerLongitude:
      in: query
      name: center[longitude]
      schema:
        type: number
        format: double
      description: The longitude of the center point of the search area. Required if `radius` is specified.
      example: -93.285233
    citiesQuery:
      in: query
      name: q
      schema:
        type: string
      required: true
      description: Query to match all or part of a city, state, or ZIP Code.
      example: minneap
    couponId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given coupon.
    drugId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given drug.
    drugsQuery:
      in: query
      name: q
      schema:
        type: string
      description: Query to match all or part of a drug's generic or brand name.
      example: Atorvastatin
    gpi14:
      in: query
      name: gpi14
      schema:
        type: string
        example: 39400010100330
      required: true
      description: >
        Medispan Generic Product Identifier
        https://www.wolterskluwercdi.com/drug-data/gpi/
    latitude:
      in: query
      name: latitude
      schema:
        type: number
        format: double
      description: The user's current location latitude.
      example: 44.949782
    limit:
      in: query
      name: limit
      schema:
        type: integer
      description: Indicates how many results to return per page.
      example: 50
    longitude:
      in: query
      name: longitude
      schema:
        type: number
        format: double
      description: The user's current location longitude.
      example: -93.285233
    page:
      in: query
      name: page
      schema:
        type: integer
      description: Indicates which page of results to load.
      example: 3
    radius:
      in: query
      name: radius
      schema:
        type: number
        format: double
      description: The radius in meters of the search area.
      example: 100
    retailerId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: The ID for a given retailer.
    searchLocationLatitude:
      in: query
      name: searchLocation[latitude]
      schema:
        type: number
        format: double
      description: The user's current location latitude required when `searchLocation` type is `currentLocation`.
      example: 44.949782
    searchLocationLongitude:
      in: query
      name: searchLocation[longitude]
      schema:
        type: number
        format: double
      description: The user's current location longitude required when `searchLocation` type is `currentLocation`.
      example: -93.285233
    searchLocationType:
      in: query
      name: searchLocation[type]
      schema:
        type: string
        enum:
          - none
          - zipCode
          - currentLocation
      required: true
      description: |
        May be none, a ZIP Code, or lat/lng.
          - `none`: No location information will be provided.
          - `zipCode`: ZIP Code will be included when the user searched for a city.
          - `currentLocation`: Latitude and longitude will be included when the user has enabled location services on their device.
    searchLocationRequiredType:
      in: query
      name: searchLocation[type]
      schema:
        type: string
        enum:
          - zipCode
          - currentLocation
      required: true
      description: |
        May be a ZIP Code, or lat/lng.
          - `zipCode`: ZIP Code will be included when the user searched for a city.
          - `currentLocation`: Latitude and longitude will be included when the user has enabled location services on their device.
    searchLocationZipCode:
      in: query
      name: searchLocation[zipCode]
      schema:
        type: string
      description: The ZIP Code required when `searchLocation` type is `zipCode`.
  schemas:
    AppContent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: Help
        html:
          type: string
          example: >
            <p>This is the content for the Help section.</p>
    Brand:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Lipitor
        forms:
          type: array
          items:
            $ref: '#/components/schemas/Form'
    City:
      type: object
      properties:
        name:
          type: string
          example: Minneapolis, MN
        zip:
          type: string
          example: 55401
    Content:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: Proper Use
        html:
          type: string
          example: >
            <p>This is the content for the Proper Use section.</p>
        legalDisclaimer:
          type: string
          example: A disclaimer is generally any statement intended to specify or delimit the scope of rights and obligations that may be exercised and enforced by parties in a legally recognized relationship. In contrast to other terms for legally operative language, the term disclaimer usually implies situations that involve some level of uncertainty, waiver, or risk.
    Coupon:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - mobileApp
            - textMessage
        email:
          type: string
          format: email
        phoneNumber:
          type: string
          example: 612-111-1111
        bin:
          type: string
        grp:
          type: string
        pcn:
          type: string
        uid:
          type: string
        price:
          $ref: '#/components/schemas/Price'
        nearestLocation:
          $ref: '#/components/schemas/RetailerLocation'
    CouponPost:
      type: object
      properties:
        gpi14:
          $ref: '#/components/schemas/GPI14'
        contact:
          type: object
          properties:
            type:
              type: string
              enum:
                - mobileApp
                - textMessage
            email:
              type: string
              format: email
            phoneNumber:
              type: string
              example: 612-111-1111
    CouponShare:
      type: object
      properties:
        defaultShareText:
          type: string
          example: >
            Atorvastatin Card:
            MemberID: ABC1234567
            RxGroup: ABC123
            RxBin: 009999
            RxPCN: ABCDEF
            Pharmacist: 1-888-111-1111
            Questions: 1-888-111-1111
            https://searchrx.com/123
        defaultShareImageUrl:
          type: string
          example: https://example.com/coupon.png
        coupon:
          $ref: '#/components/schemas/Coupon'
    CouponSharePost:
      type: object
      properties:
        shareType:
          type: string
          enum:
            - textMessage
            - email
            - mobileAppShareSheet
        email:
          type: string
          format: email
        phoneNumber:
          type: string
          example: 612-111-1111
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        deviceToken:
          type: string
          format: uuid
          description: Push notification token provided by iOS or Android.
        deviceIdentifier:
          type: string
          format: uuid
          description: Persistent, unique identifier for this device generated by the client.
        platform:
          type: string
          enum:
            - iOS
            - Android
        model:
          type: string
          example: iPhone X
        osVersion:
          type: string
          example: iOS 12.2
        appVersion:
          type: string
          example: 1.4
    DevicePost:
      type: object
      properties:
        deviceToken:
          type: string
          format: uuid
          description: Push notification token provided by iOS or Android.
        deviceIdentifier:
          type: string
          format: uuid
          description: Persistent, unique identifier for this device generated by the client.
        platform:
          type: string
          enum:
            - iOS
            - Android
        model:
          type: string
          example: iPhone X
        osVersion:
          type: string
          example: iOS 12.2
        appVersion:
          type: string
          example: 1.4
    Dosage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string
          example: 40
        unit:
          type: string
          example: mg
        quantities:
          type: array
          items:
            $ref: '#/components/schemas/Quantity'
        defaultQuantityId:
          type: string
          format: uuid
          description: Will be null if there is no default.
    DollarValue:
      type: integer
      example: 1050
      description: Dollar value in cents. e.g. 1050 equals $10.50
    Drug:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Atorvastatin
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        defaultBrandId:
          type: string
          format: uuid
          description: Will be null if the default is generic.
        defaultFormId:
          type: string
          format: uuid
          description: Will be null if there is no default.
        info:
          type: array
          items:
            $ref: '#/components/schemas/Content'
    FavoriteLocationPreference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        retailer:
          $ref: '#/components/schemas/Retailer'
    Form:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Tablet
        dosages:
          type: array
          items:
            $ref: '#/components/schemas/Dosage'
        defaultDosageId:
          type: string
          format: uuid
          description: Will be null if there is no default.
    GPI14:
      type: string
      example: 39400010100330
      description: >
        Medispan Generic Product Identifier
        https://www.wolterskluwercdi.com/drug-data/gpi/
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
        imageUrl:
          type: string
          example: https://example.com/image.png
        title:
          type: string
          example: Atorvastatin Calcium 40 mg Tablet
        appearance:
          type: string
          example: Yellow, round tablet
        imprint:
          type: string
          example: HLA 40
        manufacturer:
          type: string
          example: Teva Pharmaceuticals USA
    Killswitch:
      type: object
      properties:
        isSupported:
          type: boolean
        error:
          type: object
          properties:
            title:
              type: string
              example: New Version Available
            message:
              type: string
              example: This version is no longer supported. Please updated to the latest version.
        url:
          type: string
          example: https://example.com/new-version-info.html
          description: The user can open this URL to review upgrade details or install the latest version of the app.
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
          example: 44.949782
        longitude:
          type: number
          format: double
          example: -93.285233
    NDC:
      type: string
      example: 68645046054
      description: >
        National Drug Code from the FDA
        https://www.fda.gov/drugs/drug-approvals-and-databases/national-drug-code-directory
    NotificationPreference:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - priceAlerts
            - drugNews
        enabled:
          type: boolean
    Preferences:
      type: object
      properties:
        favoriteLocations:
          type: array
          items:
            $ref: '#/components/schemas/FavoriteLocationPreference'
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/NotificationPreference'
    PreferencesPatch:
      type: object
      properties:
        favoriteLocations:
          type: array
          items:
            type: object
            properties:
              locationId:
                type: string
                format: uuid
          description: These values will overwrite the existing list of favorite locations.
        notifications:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              enabled:
                type: boolean
    Price:
      type: object
      properties:
        retailer:
          $ref: '#/components/schemas/Retailer'
        originalPrice:
          $ref: '#/components/schemas/DollarValue'
        price:
          $ref: '#/components/schemas/DollarValue'
        priceLevel:
          type: string
          enum:
            - low
            - medium
            - high
        priceType:
          type: array
          items:
            type: string
            enum:
              - retail
              - coupon
              - GoodRxGold
        fulfillmentType:
          type: string
          enum:
            - retail
            - mailOrder
        isLowestPrice:
          type: boolean
        otherPrices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
          description: Nested price objects for comparison to this price.
    Quantity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string
          example: 90
        unit:
          type: string
          example: tablets
        ndc:
          $ref: '#/components/schemas/NDC'
        gpi14:
          $ref: '#/components/schemas/GPI14'
    Retailer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Target
        isPopular:
          type: boolean
        isFavorite:
          type: boolean
          description: Indicates whether or not this retailer has a location in the current user's favorites.
        isMembershipRequired:
          type: boolean
        membershipDetailsUrl:
          type: string
          example: https://rcam.target.com/#/
        logoUrl:
          type: string
          example: https://example.com/logo.png
        location:
          $ref: '#/components/schemas/RetailerLocation'
    RetailerLocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        isFavorite:
          type: boolean
          description: Indicates whether or not this location is included in the current user's favorites.
        addressLine1:
          type: string
          example: 123 Main St.
        addressLine2:
          type: string
        city:
          type: string
          example: Minneapolis
        state:
          type: string
          example: MN
        zipCode:
          type: string
          example: 55401
        hours:
          type: array
          items:
            type: object
            properties:
              dayOfTheWeek:
                type: string
                example: Sunday
              opensAt:
                type: integer
                example: 8
                description: Hour of the day in 24-hour time when the store opens.
              closesAt:
                type: integer
                example: 22
                description: Hour of the day in 24-hour time when the store closes.
        websiteUrl:
          type: string
          example: https://target.com
        phoneNumber:
          type: string
          example: (612) 111-1111
        coordinates:
          $ref: '#/components/schemas/Location'
        rating:
          type: object
          properties:
            title:
              type: string
              example: 4.1 out of 5 Stars
            description:
              type: string
              example: From 52 reviews on Yelp
            url:
              type: string
              example: https://www.yelp.com/biz/target-minneapolis-2
        distanceFromSearchLocation:
          type: number
          format: double
          description: The distance in meters to this location from the search location.
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
